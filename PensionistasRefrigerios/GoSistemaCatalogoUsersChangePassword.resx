<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChangePassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAPlJREFUOE+V07FLQlEUx/E31NJQezTV0H/g0CY0C4JQkGvgPyBO5aBDU/4PEmrk
        5OIiuAT5X4iT4CoEGlTfc7n38u7t3vd6P/gM59zzDk+vJpGUMcOnNsc1/pV7fOPHI70GMnOBHeSBBxzj
        BG3d2+Mc0XQggwNVuXmBnD2qKpJXyFBdVW7uIGd9VUUyhgzVVOXmCFUEP8IhKlhAFvRwm0FmD2DzBHmw
        iC5szKsXMYJNaIFcWRMtfOleWu6CCUym8M9zF6xxijNsdC/NWfAGf0DcwNy/bwibZ4SGllh5PUNuzuYS
        8q8LDYZs8ecHdYUPhL5xQ87eUQJJkl/e14t/n9LKQQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        nAAADpwBB5RT3QAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAF6SURBVDhP
        pZK/SwJhGMe/oCCnpYT5C4IQhCZxECFCjJbWGiQnaQvEta3FpSFxMUQMxa0cg6Ctv6ClFiuqrT8gaouG
        p+/d+95x5xURDZ973+f7vM+H472DiPyLb8O/oB5AgpibD/JK3jTv5Hl2yI16UBAMQiIRXHIfdppAhEzt
        WmWtOAk5tQqRyGYhjQYkHMYpa0Pn8+TOOYzWAnkiq06mDyZSKch4DKlWIfE4jpnFiEHu9fAcuSAsWruk
        4hGk05B2GzIaQQoF6z42de8GOFvkwLkedvAJOh1ItwvJ5y3Buu5dU5DjwMuvAvMNhkNIsegRPKi1tUwe
        9fCIHPkE/T6kXodEox6B+xIL5JOsOJm9MQW9HqTZhCSTliCnhnBrn1H1yRoFS06tQkwzGchgoN6iVLIE
        /FzmBVp7c7XJ28NuwVYshr1KBTKZOJd4QLbJhl5tMj6BTSCA/VoNUi5bgpK79xPeAggYBg5DIUtg/Si/
        4Q+AILkiO7M9P4IvyhrymLWLgqgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjsI5AIvBNQVjrBdiaq8dHmiuGwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv9N7ADyaAABdqRZCRJ0E5lalEm8AAAAAqcFbAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//+eAFqoFgBssSYhRJ0Fx1SlGv+AvEbYWacVQUme
        BgDB3IMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGqwHAB9uisTSJ8Ip1GkGP+WyGP/WKcf/0Oc
        BbJssSQNY60bAAAAAAAAAAAAAAAAAAAAAAAAAAAA//+iAGyxHwCDvS0QS6EJmVCjF/2TxmP/Xqsn/ziX
        AP9UpRn1hr9JUoK+UgCayFMAAAAAAAAAAAAAAAAA6vK2AFamBwB1tSMZTaEIn16qIvuKwVT/VqYe/zuY
        Af9mryz/g75M/1inGcJgqw4SaK8YAAAAAAAAAAAAf7oqAP///wBhqw8vW6kXuHe3Pf6BvUj/SqAP/0uh
        D/99u0P/eLg9/0SdCf8+mgD3VKUJVDuYAADG4HUApMxHALLSVAeHvzRdg75A24nBTv9ssi//Wagb/326
        Qf+MwlH/YKsi/zyZAf88mAD/PZkA/0uhB62ayT4Hhr80ANzergKZxj4omclUvo/EVv99u0L/isFQ/47D
        Vf9rsTH/RJ0I/zqYAP8/mgD8Rp4E5VWlD6ttsR9ekcM9CIvAOQCz1WdBqNBar5THVfGHwE36d7g79lyq
        HvBGngXgSJ8G1EyhB7tbqQ+sZq4WkWyxJYVrsSmQXKkct1mmFCtZpxUAv9yBC7DUaUGEvDhXYKwXUGGr
        FURztS83d7UdI5PEPBedyEwZVKIRpkmfC+NhrCjzSJ8O/1+rJf1OogxiNJUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACCq0IAFoUAAEKLA1E8lwDxV6cc/1enHP9Xpxv/WKcZpHq4LAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGSgHAB6pioFT6IOgEGbBfhirSL/V6cX/2GsId1dqRUoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdrcvAIjAPwlYpxNzTKEK6WKsHf9krSD7drcrcAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACex0cAzt5wA2WtGD9YpxK4bLEg+4nA
        OrwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOjtjwBSpRAAe7kyFHK0
        H3mWxkKy/x8AAP8fAAD+DwAA/AcAAPgHAADwAwAAwAMAAIABAAAAAQAAAAEAAAABAAD/gAAA/4AAAP/A
        AAD/4AAA//gAAA==
</value>
  </data>
</root>